/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './pages/__root'
import { Route as IndexRouteImport } from './pages/index'
import { Route as ProductsIndexRouteImport } from './pages/products/index'
import { Route as EnvIndexRouteImport } from './pages/env/index'
import { Route as DynammicIndexRouteImport } from './pages/dynammic/index'
import { Route as ProductsCreateRouteImport } from './pages/products/create'
import { Route as ProductsProductIdRouteImport } from './pages/products/$productId'
import { Route as DynammicCreateRouteImport } from './pages/dynammic/create'
import { Route as DynammicUserIdRouteImport } from './pages/dynammic/$userId'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProductsIndexRoute = ProductsIndexRouteImport.update({
  id: '/products/',
  path: '/products/',
  getParentRoute: () => rootRouteImport,
} as any)
const EnvIndexRoute = EnvIndexRouteImport.update({
  id: '/env/',
  path: '/env/',
  getParentRoute: () => rootRouteImport,
} as any)
const DynammicIndexRoute = DynammicIndexRouteImport.update({
  id: '/dynammic/',
  path: '/dynammic/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProductsCreateRoute = ProductsCreateRouteImport.update({
  id: '/products/create',
  path: '/products/create',
  getParentRoute: () => rootRouteImport,
} as any)
const ProductsProductIdRoute = ProductsProductIdRouteImport.update({
  id: '/products/$productId',
  path: '/products/$productId',
  getParentRoute: () => rootRouteImport,
} as any)
const DynammicCreateRoute = DynammicCreateRouteImport.update({
  id: '/dynammic/create',
  path: '/dynammic/create',
  getParentRoute: () => rootRouteImport,
} as any)
const DynammicUserIdRoute = DynammicUserIdRouteImport.update({
  id: '/dynammic/$userId',
  path: '/dynammic/$userId',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dynammic/$userId': typeof DynammicUserIdRoute
  '/dynammic/create': typeof DynammicCreateRoute
  '/products/$productId': typeof ProductsProductIdRoute
  '/products/create': typeof ProductsCreateRoute
  '/dynammic': typeof DynammicIndexRoute
  '/env': typeof EnvIndexRoute
  '/products': typeof ProductsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dynammic/$userId': typeof DynammicUserIdRoute
  '/dynammic/create': typeof DynammicCreateRoute
  '/products/$productId': typeof ProductsProductIdRoute
  '/products/create': typeof ProductsCreateRoute
  '/dynammic': typeof DynammicIndexRoute
  '/env': typeof EnvIndexRoute
  '/products': typeof ProductsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/dynammic/$userId': typeof DynammicUserIdRoute
  '/dynammic/create': typeof DynammicCreateRoute
  '/products/$productId': typeof ProductsProductIdRoute
  '/products/create': typeof ProductsCreateRoute
  '/dynammic/': typeof DynammicIndexRoute
  '/env/': typeof EnvIndexRoute
  '/products/': typeof ProductsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dynammic/$userId'
    | '/dynammic/create'
    | '/products/$productId'
    | '/products/create'
    | '/dynammic'
    | '/env'
    | '/products'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dynammic/$userId'
    | '/dynammic/create'
    | '/products/$productId'
    | '/products/create'
    | '/dynammic'
    | '/env'
    | '/products'
  id:
    | '__root__'
    | '/'
    | '/dynammic/$userId'
    | '/dynammic/create'
    | '/products/$productId'
    | '/products/create'
    | '/dynammic/'
    | '/env/'
    | '/products/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DynammicUserIdRoute: typeof DynammicUserIdRoute
  DynammicCreateRoute: typeof DynammicCreateRoute
  ProductsProductIdRoute: typeof ProductsProductIdRoute
  ProductsCreateRoute: typeof ProductsCreateRoute
  DynammicIndexRoute: typeof DynammicIndexRoute
  EnvIndexRoute: typeof EnvIndexRoute
  ProductsIndexRoute: typeof ProductsIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/products/': {
      id: '/products/'
      path: '/products'
      fullPath: '/products'
      preLoaderRoute: typeof ProductsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/env/': {
      id: '/env/'
      path: '/env'
      fullPath: '/env'
      preLoaderRoute: typeof EnvIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dynammic/': {
      id: '/dynammic/'
      path: '/dynammic'
      fullPath: '/dynammic'
      preLoaderRoute: typeof DynammicIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/products/create': {
      id: '/products/create'
      path: '/products/create'
      fullPath: '/products/create'
      preLoaderRoute: typeof ProductsCreateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/products/$productId': {
      id: '/products/$productId'
      path: '/products/$productId'
      fullPath: '/products/$productId'
      preLoaderRoute: typeof ProductsProductIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dynammic/create': {
      id: '/dynammic/create'
      path: '/dynammic/create'
      fullPath: '/dynammic/create'
      preLoaderRoute: typeof DynammicCreateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dynammic/$userId': {
      id: '/dynammic/$userId'
      path: '/dynammic/$userId'
      fullPath: '/dynammic/$userId'
      preLoaderRoute: typeof DynammicUserIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DynammicUserIdRoute: DynammicUserIdRoute,
  DynammicCreateRoute: DynammicCreateRoute,
  ProductsProductIdRoute: ProductsProductIdRoute,
  ProductsCreateRoute: ProductsCreateRoute,
  DynammicIndexRoute: DynammicIndexRoute,
  EnvIndexRoute: EnvIndexRoute,
  ProductsIndexRoute: ProductsIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
